fun main() {
    var x = 4;
    x %= 2;
    if (x == 0) {
        println("(x = 4) % 2 == 0");
    }
    if (2 % 2 == 0) {
        println("2 % 2 == 0");
    }
    if (1 % 2 == 0) {
        println("1 % 2 == 0");
    } else {
        println("1 % 2 != 0");
    }
    var env = *env();
    var args = *cmd::args(env.get_args().skip(1)); # skip file name (may be some OS where that won't work, fix later if necessary)
    #var args = *cmd::args(["-greeting", "hello world", "-bye", "ciao world and so forth"]);
    for(args.parse()) {
        println($'"{it.name}" with value "{it.value}"');
    }
    println(args.parse());
}


modu cmd {
    typ arg {
        ctor(name,value);
    }

    typ args {
        ctor(arg_list);

        fun parse() {
            if(arg_list.len() < 1) {
                ret [];
            }
            var cursor = 0;
            var all = [];
            var arg_name = "";
            var arg_val = [];
            for {
                if (arg_list[cursor][0] == '-') {
                    arg_name = arg_list[cursor];
                    arg_val = [];
                    for {
                        cursor++;
                        if (cursor > arg_list.len() - 1) {
                            break;
                        } else if (arg_list[cursor][0] == '-') {
                            cursor--;
                            break;
                        }
                        arg_val.add(arg_list[cursor]);
                    }

                    all.add(*cmd::arg(arg_name, str::join(arg_val, " ")));
                } else {
                    break;
                }
                cursor++;
                if(cursor > arg_list.len() - 1) {
                    break;
                }
            }
            ret all;
        }
    }
}

modu str {
   fun join(strings, joiner) {
        var finalStr = strings[0];
        for (strings.skip(1)) {
            finalStr += joiner + it;
        }
        ret finalStr;
    }
}